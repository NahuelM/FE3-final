{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nahue\\\\Desktop\\\\Front3\\\\Integrador\\\\fe3-final\\\\src\\\\UserContextProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\"; //export const UserContext = createContext();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_DOC\":\n      // Validamos si el usuario es el mismo que ya tenemos almacenado\n      const existingUser = state.username === action.payload.login; // Si es un usuario distinto, extraemos las propiedades\n      // que deseamos almacenar y las guardamos en el estado\n\n      if (!existingUser) {\n        const {\n          name,\n          avatar_url,\n          html_url,\n          login\n        } = action.payload; // Nuestro estado es un objeto con estas propiedades\n\n        const newUser = {\n          name,\n          avatar_url,\n          html_url,\n          username: login\n        }; // En caso de que cambie el usuario seleccionado\n        // actualizamos la información que se encuentre en\n        // el storage\n\n        setUserInStorage(newUser);\n        return newUser;\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n_c = UserReducer;\n\nconst getUsersFromStorage = () => {\n  const localData = localStorage.getItem(\"users\");\n  return localData ? JSON.parse(localData) : [];\n};\n\nconst setUserInStorage = users => localStorage.setItem(\"users\", JSON.stringify(users));\n\nconst UserContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //const [users, setUsers] = useState(getUsersFromStorage());\n  const [user, dispatch] = useReducer(UserReducer, // Pasamos nuestro reducer\n  {}, getUsersFromStorage //inicializa estado\n  );\n  useEffect(() => {\n    setUserInStorage(users);\n  }, [users]);\n\n  const addUser = user => {\n    setUsers(prevUsers => [...prevUsers, user]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      users,\n      addUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserContextProvider, \"YnYX8B+HbozqtgWdYUw/EbzN7J4=\");\n\n_c2 = UserContextProvider;\nexport default UserContextProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserReducer\");\n$RefreshReg$(_c2, \"UserContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","UserReducer","state","action","type","existingUser","username","payload","login","name","avatar_url","html_url","newUser","setUserInStorage","getUsersFromStorage","localData","localStorage","getItem","JSON","parse","users","setItem","stringify","UserContextProvider","children","user","dispatch","useReducer","addUser","setUsers","prevUsers"],"sources":["C:/Users/nahue/Desktop/Front3/Integrador/fe3-final/src/UserContextProvider.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\n\r\n//export const UserContext = createContext();\r\nexport const UserReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_DOC\":\r\n        // Validamos si el usuario es el mismo que ya tenemos almacenado\r\n        const existingUser = state.username === action.payload.login;\r\n        // Si es un usuario distinto, extraemos las propiedades\r\n        // que deseamos almacenar y las guardamos en el estado\r\n        if (!existingUser) {\r\n        const { name, avatar_url, html_url, login } = action.payload;\r\n        // Nuestro estado es un objeto con estas propiedades\r\n        const newUser = { name, avatar_url, html_url, username: login };\r\n        // En caso de que cambie el usuario seleccionado\r\n        // actualizamos la información que se encuentre en\r\n        // el storage\r\n        setUserInStorage(newUser);\r\n\r\n        return newUser;\r\n    }\r\n    return state;\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nconst getUsersFromStorage = () => {\r\n    const localData = localStorage.getItem(\"users\");\r\n    return localData ? JSON.parse(localData) : [];\r\n};\r\n\r\nconst setUserInStorage = (users) => localStorage.setItem(\"users\", JSON.stringify(users));\r\n\r\n\r\nconst UserContextProvider = ({ children }) => {\r\n    //const [users, setUsers] = useState(getUsersFromStorage());\r\n    const [user, dispatch] = useReducer(\r\n        UserReducer, // Pasamos nuestro reducer\r\n        {},\r\n        getUsersFromStorage //inicializa estado\r\n    );\r\n\r\n\r\n    useEffect(() => {\r\n        setUserInStorage(users);\r\n    }, [users]);\r\n\r\n\r\n    const addUser = (user) => {\r\n        setUsers((prevUsers) => [...prevUsers, user]);\r\n    };\r\n    \r\n\r\n    return (\r\n        <UserContext.Provider value={{users, addUser }}>\r\n        {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\nexport default UserContextProvider;"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD,C,CAGA;;;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC1C,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,SAAL;MACA;MACA,MAAMC,YAAY,GAAGH,KAAK,CAACI,QAAN,KAAmBH,MAAM,CAACI,OAAP,CAAeC,KAAvD,CAFA,CAGA;MACA;;MACA,IAAI,CAACH,YAAL,EAAmB;QACnB,MAAM;UAAEI,IAAF;UAAQC,UAAR;UAAoBC,QAApB;UAA8BH;QAA9B,IAAwCL,MAAM,CAACI,OAArD,CADmB,CAEnB;;QACA,MAAMK,OAAO,GAAG;UAAEH,IAAF;UAAQC,UAAR;UAAoBC,QAApB;UAA8BL,QAAQ,EAAEE;QAAxC,CAAhB,CAHmB,CAInB;QACA;QACA;;QACAK,gBAAgB,CAACD,OAAD,CAAhB;QAEA,OAAOA,OAAP;MACH;;MACD,OAAOV,KAAP;;IACF;MACE,OAAOA,KAAP;EAnBA;AAqBH,CAtBM;KAAMD,W;;AAwBb,MAAMa,mBAAmB,GAAG,MAAM;EAC9B,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;EACA,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2B,EAA3C;AACH,CAHD;;AAKA,MAAMF,gBAAgB,GAAIO,KAAD,IAAWJ,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,SAAL,CAAeF,KAAf,CAA9B,CAApC;;AAGA,MAAMG,mBAAmB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC1C;EACA,MAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBC,UAAU,CAC/B1B,WAD+B,EAClB;EACb,EAF+B,EAG/Ba,mBAH+B,CAGX;EAHW,CAAnC;EAOAf,SAAS,CAAC,MAAM;IACZc,gBAAgB,CAACO,KAAD,CAAhB;EACH,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;EAKA,MAAMQ,OAAO,GAAIH,IAAD,IAAU;IACtBI,QAAQ,CAAEC,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeL,IAAf,CAAhB,CAAR;EACH,CAFD;;EAKA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAACL,KAAD;MAAQQ;IAAR,CAA7B;IAAA,UACCJ;EADD;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAxBD;;GAAMD,mB;;MAAAA,mB;AAyBN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}