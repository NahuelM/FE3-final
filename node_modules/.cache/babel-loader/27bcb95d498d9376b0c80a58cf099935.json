{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nahue\\\\Desktop\\\\Front3\\\\Integrador\\\\fe3-final\\\\src\\\\UserContextProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\"; // Creamos el contexto utilizando createContext()\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\nconst getUserFromStorage = () => {\n  const localData = localStorage.getItem(\"user\");\n  return localData ? JSON.parse(localData) : [];\n};\n\nconst setUserInStorage = user => localStorage.setItem(\"user\", JSON.stringify(user)); // Almacenamos la información del usuario para poder\n// compartirla a nuestros componentes. El valor inicial\n// es la información que obtenemos del localStorage\n\n\nconst [user, setUser] = useState(getUserFromStorage()); // Creamos el proveedor del contexto que nos permitirá\n// compartir dicho contexto a los componentes hijos.\n\nconst UserContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // En caso de que cambie el usuario seleccionado\n  // actualizamos la información que se encuentre en\n  // el storage\n  useEffect(() => {\n    setUserInStorage(user);\n  }, [user]); // Creamos una función para actualizar el usuario\n\n  const changeUser = user => setUser(user);\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      changeUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserContextProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UserContextProvider;\nexport default UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","UserContext","getUserFromStorage","localData","localStorage","getItem","JSON","parse","setUserInStorage","user","setItem","stringify","setUser","UserContextProvider","children","changeUser"],"sources":["C:/Users/nahue/Desktop/Front3/Integrador/fe3-final/src/UserContextProvider.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\n// Creamos el contexto utilizando createContext()\r\nexport const UserContext = createContext();\r\n\r\n\r\nconst getUserFromStorage = () => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    return localData ? JSON.parse(localData) : [];\r\n};\r\n\r\nconst setUserInStorage = (user) => localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n\r\n// Almacenamos la información del usuario para poder\r\n// compartirla a nuestros componentes. El valor inicial\r\n// es la información que obtenemos del localStorage\r\nconst [user, setUser] = useState(getUserFromStorage());\r\n\r\n\r\n\r\n// Creamos el proveedor del contexto que nos permitirá\r\n// compartir dicho contexto a los componentes hijos.\r\nconst UserContextProvider = ({ children }) => {\r\n    // En caso de que cambie el usuario seleccionado\r\n    // actualizamos la información que se encuentre en\r\n    // el storage\r\n    useEffect(() => {\r\n        setUserInStorage(user);\r\n    }, [user]);\r\n\r\n    // Creamos una función para actualizar el usuario\r\n    const changeUser = (user) => setUser(user);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ changeUser}}>\r\n        {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\nexport default UserContextProvider;"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD,C,CAEA;;;AACA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AAGP,MAAMI,kBAAkB,GAAG,MAAM;EAC7B,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB;EACA,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2B,EAA3C;AACH,CAHD;;AAKA,MAAMK,gBAAgB,GAAIC,IAAD,IAAUL,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA6BJ,IAAI,CAACK,SAAL,CAAeF,IAAf,CAA7B,CAAnC,C,CAGA;AACA;AACA;;;AACA,MAAM,CAACA,IAAD,EAAOG,OAAP,IAAkBZ,QAAQ,CAACE,kBAAkB,EAAnB,CAAhC,C,CAIA;AACA;;AACA,MAAMW,mBAAmB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC1C;EACA;EACA;EACAf,SAAS,CAAC,MAAM;IACZS,gBAAgB,CAACC,IAAD,CAAhB;EACH,CAFQ,EAEN,CAACA,IAAD,CAFM,CAAT,CAJ0C,CAQ1C;;EACA,MAAMM,UAAU,GAAIN,IAAD,IAAUG,OAAO,CAACH,IAAD,CAApC;;EAEA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEM;IAAF,CAA7B;IAAA,UACCD;EADD;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAhBD;;GAAMD,mB;;KAAAA,mB;AAiBN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}