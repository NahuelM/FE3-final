{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nahue\\\\Desktop\\\\Front3\\\\Integrador\\\\fe3-final\\\\src\\\\Components\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  //Aqui deberan implementar el form completo con sus validaciones\n  const [datos, setDatos] = useState({\n    nombre: '',\n    email: ''\n  });\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(false);\n  const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n  const handleIngresar = () => {\n    if (datos.nombre.length > 5 && emailRegex.test(datos.email)) {\n      setDatos({\n        nombre: datos.nombre,\n        email: datos.email\n      });\n      setShow(true);\n      setError(false);\n    } else {\n      setError(true);\n      setShow(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nombre\",\n        children: \"Nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"nombre\",\n        name: \"nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"green\",\n          marginTop: '10px'\n        },\n        onClick: handleIngresar,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \" informaci\\xF3n  correcta\"\n      }, void 0, false) : null, error && /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Por favor chequea que la informaci\\xF3n sea correcta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"ZF5D8qjYVNEiQBuhsyyml1D18I8=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Form","datos","setDatos","nombre","email","show","setShow","error","setError","emailRegex","handleIngresar","length","test","backgroundColor","marginTop","color"],"sources":["C:/Users/nahue/Desktop/Front3/Integrador/fe3-final/src/Components/Form.jsx"],"sourcesContent":["import React, {useState}from \"react\";\r\n\r\n\r\nconst Form = () => {\r\n  //Aqui deberan implementar el form completo con sus validaciones\r\n  const [datos, setDatos] = useState({nombre:'', email:''})\r\n  const [show, setShow] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n\r\n  const handleIngresar = () => {\r\n    if(datos.nombre.length > 5 && emailRegex.test(datos.email)){\r\n      setDatos({nombre:datos.nombre, email:datos.email});\r\n      setShow(true);\r\n      setError(false);\r\n    } else {\r\n      setError(true);\r\n      setShow(false);\r\n    }\r\n    \r\n  }\r\n  return (\r\n    <div>\r\n      <form>\r\n        <label htmlFor=\"nombre\">Nombre:</label>\r\n        <input type=\"text\" id=\"nombre\" name=\"nombre\" />\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input type=\"text\" id=\"email\" name=\"email\" />\r\n        <button style={{backgroundColor:\"green\", marginTop: '10px'}} onClick={handleIngresar}>Enviar</button>\r\n\r\n          {show ? <> información  correcta</> :null}\r\n          {error && <h3 style={{ color: 'red'}}>Por favor chequea que la información sea correcta</h3>}\r\n      </form>\r\n      \r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;;;;AAGA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;IAACI,MAAM,EAAC,EAAR;IAAYC,KAAK,EAAC;EAAlB,CAAD,CAAlC;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAMU,UAAU,GAAG,iDAAnB;;EAEA,MAAMC,cAAc,GAAG,MAAM;IAC3B,IAAGT,KAAK,CAACE,MAAN,CAAaQ,MAAb,GAAsB,CAAtB,IAA2BF,UAAU,CAACG,IAAX,CAAgBX,KAAK,CAACG,KAAtB,CAA9B,EAA2D;MACzDF,QAAQ,CAAC;QAACC,MAAM,EAACF,KAAK,CAACE,MAAd;QAAsBC,KAAK,EAACH,KAAK,CAACG;MAAlC,CAAD,CAAR;MACAE,OAAO,CAAC,IAAD,CAAP;MACAE,QAAQ,CAAC,KAAD,CAAR;IACD,CAJD,MAIO;MACLA,QAAQ,CAAC,IAAD,CAAR;MACAF,OAAO,CAAC,KAAD,CAAP;IACD;EAEF,CAVD;;EAWA,oBACE;IAAA,uBACE;MAAA,wBACE;QAAO,OAAO,EAAC,QAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,QAAtB;QAA+B,IAAI,EAAC;MAApC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,OAAtB;QAA8B,IAAI,EAAC;MAAnC;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAQ,KAAK,EAAE;UAACO,eAAe,EAAC,OAAjB;UAA0BC,SAAS,EAAE;QAArC,CAAf;QAA6D,OAAO,EAAEJ,cAAtE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,EAOKL,IAAI,gBAAG;QAAA;MAAA,iBAAH,GAAgC,IAPzC,EAQKE,KAAK,iBAAI;QAAI,KAAK,EAAE;UAAEQ,KAAK,EAAE;QAAT,CAAX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARd;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAlCD;;GAAMf,I;;KAAAA,I;AAoCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}